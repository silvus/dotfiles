#!/usr/bin/env bash

# Launch tmux
# -----------------------------------------------------------------------------
_launch_tmux() {
	local _TMUX_SESSION_NAME="main"

	#Â Make sure Fish is flagged as not started at this point
	unset FISH_IS_STARTED

	# make sure tmux server is running
	tmux start-server

	# Determine if session is running
	tmux has-session -t "${_TMUX_SESSION_NAME}"
	if [[ "$?" != 0 ]]; then

		# Launch session
		tmux new-session -s "${_TMUX_SESSION_NAME}" -d

		# Remind stuff
		# if [[ -x "$(which remind 2>/dev/null)" ]]; then
		# 	if [[ -x "/data/doc/.bin/remindnotif" ]]; then
		# 		tmux split-window -h -t "${_TMUX_SESSION_NAME}" "/data/doc/.bin/remindnotif"
		# 		tmux resize-pane -t "${_TMUX_SESSION_NAME}" -x 85
		# 	fi
		# 	if [[ -x "/data/doc/.bin/remindreload" ]]; then
		# 		tmux split-window -v -t "${_TMUX_SESSION_NAME}" "/data/doc/.bin/remindreload"
		# 		tmux resize-pane -t "${_TMUX_SESSION_NAME}" -y 75
		# 		tmux select-pane -t 1
		# 	fi
		# fi

		# Source env script
		if [[ -f "${SILVUSDOTFILES_CUSTOM}/tmuxdev" ]]; then
			source "${SILVUSDOTFILES_CUSTOM}/tmuxdev"
		elif [[ -f "$HOME/.dotfiles_custom/tmuxdev" ]]; then
			# When urxvt is started by Awesomewm, bash_aliases is not sourced and env variables are missing
			source "$HOME/.dotfiles_custom/tmuxdev"
		fi

		# Focus on first window
		tmux select-window -t 1

		# Attach to session
		tmux attach -t "${_TMUX_SESSION_NAME}"

	else
		# Attach to session without disturbing the others clients
		tmux new-session -t "${_TMUX_SESSION_NAME}"
	fi
}

# Check if tmux is installed
if [[ -x "$(which tmux 2>/dev/null)" ]]; then
	_launch_tmux
else
	echo "Tmux is not installed"
	exit 1
fi
