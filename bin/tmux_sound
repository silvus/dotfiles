#!/bin/bash

usage() {
cat <<EOF
sound usage:
  general:
	-h, --help    print this message
EOF
}

if [[ $1 == '-h' || $1 == '--help' || $1 == '-?' ]]; then
	usage
	exit 0
fi

# Determine volume state and level
volume_status() {
	
	# Get volume state
	VOL_ON=0
	if $(amixer -D pulse sget Master | grep 'Left:' | grep -q "\[on\]"); then
		VOL_ON=1
	fi

	# Silent exit if sound is off
	if [[ "$VOL_ON" -eq 0 ]]; then
		exit 0
	fi

	# Get volume percentage
	vol_now=$(amixer -D pulse sget Master | grep 'Left:' | awk -F'[][]' '{ print $2 }')
	# Remove "%" from string
	VOL_PCT=${vol_now::-1}
}

# Apply the correct color to the volume status prompt
apply_colors() {
	if [[ "$VOL_ON" -eq 1 ]]; then
		COLOR="white"
	elif [[ "$VOL_ON" -eq 0 ]]; then
		COLOR="red"
	else
		COLOR="yellow"
	fi
}

# Print the sound status
print_status() {
	GRAPH_ASCII=""
	if ((VOL_ON)); then
		# Sound from nerdfonts (https://www.nerdfonts.com/cheat-sheet)
		GRAPH_ASCII="$(printf "\Uf057e")"
	else
		# No sound from nerdfonts
		GRAPH_ASCII="$(printf "\Uf0e08")"
	fi

	# Inspired from https://github.com/tmux-plugins/tmux-battery/blob/master/scripts/battery_graph.sh
	GRAPH=""
	if [ $VOL_PCT -gt 5 ]; then
		GRAPH=$GRAPH"▁"
	else
		GRAPH=$GRAPH" "
	fi
	if [ $VOL_PCT -gt 18 ]; then
		GRAPH=$GRAPH"▂"
	else
		GRAPH=$GRAPH" "
	fi
	if [ $VOL_PCT -gt 30 ]; then
		GRAPH=$GRAPH"▃"
	else
		GRAPH=$GRAPH" "
	fi
	if [ $VOL_PCT -gt 43 ]; then
		GRAPH=$GRAPH"▄"
	else
		GRAPH=$GRAPH" "
	fi
	if [ $VOL_PCT -ge 56 ]; then
		GRAPH=$GRAPH"▅"
	else
		GRAPH=$GRAPH" "
	fi
	if [ $VOL_PCT -ge 69 ]; then
		GRAPH=$GRAPH"▆"
	else
		GRAPH=$GRAPH" "
	fi
	if [ $VOL_PCT -ge 82 ]; then
		GRAPH=$GRAPH"▇"
	else
		GRAPH=$GRAPH" "
	fi
	if [ $VOL_PCT -ge 95 ]; then
		GRAPH=$GRAPH"█"
	else
		GRAPH=$GRAPH" "
	fi

	printf "#[bg=black]#[fg=%s] %s #[fg=black]#[bg=green] %s #[default] " "$COLOR" "$GRAPH_ASCII" "$GRAPH"
}

volume_status
apply_colors
print_status
